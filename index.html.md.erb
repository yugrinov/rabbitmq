---
breadcrumb: VMware Tanzu RabbitMQ for VMs Documentation
title: VMware Tanzu RabbitMQ for VMs
owner: London Services
---

## <a id='AboutTile'></a>About <%= vars.product_full %>

<%= vars.product_short %> enables app developers to provision and use the RabbitMQ message broker
with a single command.

<%= vars.product_short %> supports two types of service, an **on-demand** service and a
**pre-provisioned** service.

This table summarizes the main differences between the two:

<table id='rabbit-odb-vs-pre' border="1" class="nice"><tr>
  <col style="width:15%">
  <col style="width:28%">
  <col style="width:28%">
  <col style="width:29%">
   <th></th>
   <th>VMs it Runs On</th>
   <th>How VMs are Created</th>
   <th>Metrics Name Prefix</th>
   </tr><tr>
   <th>On-Demand Service</th>
   <td>Dedicated VM that serves a single service instance. For more information, see <a href="./ondemand.html">Unlocking the Power of On-Demand VMware Tanzu RabbitMQ for VMs</a>.</td>
   <td>The BOSH Director creates each VM on-demand when an app developer creates a service instance.</td>
   <td><code>p.rabbitmq</code> (with a dot)</td>
   </tr><tr>
   <th>Pre-Provisioned Service</th>
   <td>Multi-tenant VMs shared by apps across your deployment</td>
   <td>The BOSH Director creates all VMs when operator deploys or updates service</td>
   <td><code>p-rabbitmq</code> (with a dash)</td>
   </tr>
</table>


<p class="note">
  <strong>Note:</strong> For most new apps, VMware recommends that you use on-demand services instead
  of pre-provisioned services. The on-demand service offering isolates workloads by creating a
  separate VM for each service instance.
</p>


### <a id="dedicated"></a> Overview of On-Demand Instances

In <%= vars.product_short %> versions before v1.8.0, the <%= vars.product_short %> service instances
correspond to a unique RabbitMQ virtual host on the multi-tenant RabbitMQ cluster.
<%= vars.product_short %> v1.8.0 introduced on-demand service broker (ODB) support.
That means you can create a new single-tenant cluster and dedicate it to a single app.

For more information, see
[Unlocking the Power of On-Demand <%= vars.product_full %>](./ondemand.html) and [On-Demand Service Architecture](./about.html).


## <a id='AboutRabbit'></a>About RabbitMQ

RabbitMQ is a fast and dependable open-source message server, which supports a wide range of use cases
including reliable integration, content-based routing and global data delivery, and high-volume
monitoring and data ingestion.

Emerging as the de facto standard for cloud messaging, RabbitMQ is used for efficient communication
between servers, apps, and devices, and creates lasting value by enabling rapid development of modern
decentralized app and data architectures that can scale with your business needs.


## <a id='snapshot'></a> Product Snapshot

The following table provides version and version-support information about <%= vars.product_short %>.

<table class="nice">
    <th>Element</th>
    <th>Details</th>
    <tr>
        <td>Version</td>
        <td>2.0.8</td>
    </tr>
    <tr>
        <td>Release date</td>
        <td>December 6, 2021</td>
    </tr>
    <tr>
        <td>Software component version</td>
        <td>RabbitMQ OSS 3.8.27 and 3.9.12</td>
    </tr>
    <tr>
        <td>Compatible <%= vars.ops_manager %> versions</td>
        <td>2.10, 2.9, 2.8, or 2.7</td>
    </tr>
    <tr>
        <td>Compatible <%= vars.app_runtime_full %> versions</td>
        <td>2.12, 2.11, 2.10, 2.9, 2.8, or 2.7</td>
    </tr>
    <tr>
        <td>IaaS support</td>
        <td>AWS, Azure, GCP, OpenStack, and vSphere</td>
    </tr>
   <tr>
        <td>IPsec support</td>
        <td>No</td>
    </tr>
</table>


## <a id='features'></a>Features

###<a id='on-demand'></a> On-Demand

* Create up to 5 different on-demand <%= vars.product_short %> plans which can be provisioned through the Marketplace
* Choose whether a plan has 1, 3, 5, or 7 nodes
* Default resource sizes in plans to guide selection
* More control over which Orgs and Spaces have visibility of each configured plan
* Bind apps to an instance of the plan, providing unique credentials for each binding
* Management UI access to app developers
* Deployment into an availability zone (AZ) specified by the plan
* Enable Transport Layer Security (TLS) for the AMQP protocol
* Automated upgrades of RabbitMQ for major, minor, and patch releases (see the release notes for downtime requirements)
* <%= vars.product_short %> syslog forwarding configuration inherited from the pre-provisioned configuration
* <%= vars.product_short %> metrics are exposed on the Firehose
* Run smoke tests for on-demand plans on plan 1
* Errands are run on co-located VMs to decrease deployment times

For more information, see [Unlocking the Power of On-Demand <%= vars.product_full %>](./ondemand.html).


### <a id='pre-provisioned'></a> Pre-Provisioned

* Provision an instance of the RabbitMQ service, which corresponds to a unique RabbitMQ virtual host
* Bind apps to an instance of the plan, providing unique credentials for each binding
* Management UI access to operators and app developers
* Deployment across multiple AZs, with nodes striped across the AZs automatically
* Enable SSL (Secure Sockets Layer) for the AMQP, MQTT, STOMP, and Web STOMP protocols
* HA Proxy load balancer across all nodes to balance connections
* Plugin configuration can be easily changed at any time and the cluster redeployed and updated
* The cluster topology can be changed and easily scaled out
* Automated upgrades of RabbitMQ for major, minor, and patch releases. For downtime requirements, see [Downtime When Upgrading](./upgrade.html#downtime).
* Configure the end point for the <%= vars.product_short %> syslog
* RabbitMQ and HA Proxy metrics are exposed on the Firehose
* Syslog forwarding on by default
* Errands are run on co-located VMs to decrease deployment times


## <a id='known-issues'></a>Release Notes and Known Issues

See the [release notes](releases.html) for your release version for important information and known
issues.
To see release notes for another version, select the version from the dropdown at the top of the page.


## <a id="other-services"></a> <%= vars.product_short %> and Other On-Demand Services

<%# The below partial is in https://github.com/pivotal-cf/docs-partials %>

<%= partial vars.path_to_partials + '/services/on-demand-service-table', :locals => {
  :service_name => vars.product_full,
  :rabbit => vars.product_full,
  :redis => "Redis for VMware Tanzu Application Service",
  :mysql => "VMware Tanzu SQL with MySQL for VMs",
  :cloud_cache => "VMware Tanzu GemFire for VMs",
  :gemfire => "VMware GemFire"
} %>


## <a id='feedback'></a>Feedback

Please send any issue reports, feature requests, or questions to the
[Feedback list](mailto:pivotal-cf-feedback@pivotal.io).
